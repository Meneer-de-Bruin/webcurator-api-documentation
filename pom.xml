<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.webcurator</groupId>
	<artifactId>webcurator-webapp</artifactId>
	<version>3.0.0-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>Web Curator Tool WebApp</name>
	<description>Web Curator Tool web application</description>

	<properties>
		<browse.double_escape>false</browse.double_escape>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

	<build>
		<finalName>${project.artifactId}-${project.version}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>properties-maven-plugin</artifactId>
				<version>1.0-alpha-1</version>
				<executions>
					<execution>
						<phase>initialize</phase>
						<goals>
							<goal>read-project-properties</goal>
						</goals>
						<configuration>
							<files>
								<file>${basedir}/build/local_${databaseType}_config.properties</file>
								<file>${basedir}/build/hib_${databaseType}.properties</file>
								<file>${basedir}/build/local_config.properties</file>
							</files>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
				<executions>
					<execution>
						<id>copy-jetty-env</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>build/jetty</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>jetty-filtered-resources</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/filtered</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/webapp-filter</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<webResources>
						<resource>
							<!-- include the license file, as per the original build process -->
							<directory>.</directory>
							<includes>
								<include>LICENSE</include>
							</includes>
						</resource>
						<resource>
							<!-- include the license file, as per the original build process -->
							<directory>${basedir}/src/main/webapp-filter</directory>
							<includes>
								<include>**/*</include>
							</includes>
							<filtering>true</filtering>
						</resource>
					</webResources>
					<primaryArtifact>false</primaryArtifact>
				</configuration>
				<executions>
					<execution>
						<id>build-war-file</id>
						<phase>package</phase>
						<goals>
							<goal>war</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.4.15.v20190215</version>
				<configuration>
					<stopKey>${core.stopKey}</stopKey>
					<stopPort>${core.stopPort}</stopPort>
					<war>${project.basedir}/target/${project.artifactId}-${project.version}.war</war>
					<!--<webApp>-->
						<!--<contextPath>/wct</contextPath>-->
						<!--<jettyEnvXml>${project.build.directory}/jetty-env.xml</jettyEnvXml>-->
						<!--<resourceBases>-->
							<!--<resourceBase>${project.build.directory}/filtered</resourceBase>-->
							<!--<resourceBase>src/main/webapp</resourceBase>-->
						<!--</resourceBases>-->
					<!--</webApp>-->
					<!--See https://www.eclipse.org/jetty/documentation/9.4.x/configuring-connectors.html
						Prior to Jetty 9, the type of the connector specified both the protocol and the implementation
						used. Jetty 9 has a single selector-based non-blocking I/O connector, and a collection of
						ConnectionFactories now configure the protocol on the connector. -->
					<httpConnector>
						<port>${core.port}</port>
						<idleTimeout>10000</idleTimeout>
					</httpConnector>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.springframework</groupId>
						<artifactId>spring-jdbc</artifactId>
						<version>3.2.18.RELEASE</version>
						<exclusions>
							<!-- Use the classes found in jcl-over-slf4j -->
							<exclusion>
								<groupId>commons-logging</groupId>
								<artifactId>commons-logging</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<!--<dependency>-->
					<!--<groupId>commons-dbcp</groupId>-->
					<!--<artifactId>commons-dbcp</artifactId>-->
					<!--<version>1.4</version>-->
				<!--</dependency>-->
				</dependencies>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											properties-maven-plugin
										</artifactId>
										<versionRange>
											[1.0-alpha-1,)
										</versionRange>
										<goals>
											<goal>
												read-project-properties
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>h2</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<databaseType>h2</databaseType>
				<hbm2ddl.auto>update</hbm2ddl.auto>
			</properties>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<version>1.4.199</version>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>properties-maven-plugin</artifactId>
						<version>1.0-alpha-2</version>
						<executions>
							<execution>
								<goals>
									<goal>set-system-properties</goal>
								</goals>
								<configuration>
									<properties>
										<property>
											<name>hibernate.hbm2ddl.auto</name>
											<value>${hbm2ddl.auto}</value>
										</property>
										<!--
										<property>
											<name>hibernate.dialect</name>
											<value>org.hibernate.dialect.H2Dialect</value>
										</property>
										-->
									</properties>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>mysql</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<databaseType>mysql</databaseType>
			</properties>
			<dependencies>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
					<version>5.1.6</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<!-- Note for running Oracle in Jetty you need to include the oracle driver
				in the war -->
			<id>oracle</id>
			<properties>
				<databaseType>oracle</databaseType>
			</properties>
			<dependencies>
				<dependency>
					<groupId>com.oracle</groupId>
					<artifactId>ojdbc14</artifactId>
					<version>11.2.0.3</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>postgres</id>
			<properties>
				<databaseType>postgres</databaseType>
			</properties>
			<dependencies>
				<dependency>
					<groupId>postgresql</groupId>
					<artifactId>postgresql</artifactId>
					<version>9.1-901.jdbc4</version>
				</dependency>
			</dependencies>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.webcurator</groupId>
			<artifactId>webcurator-core</artifactId>
			<version>3.0.0-SNAPSHOT</version>
			<scope>compile</scope>
			<exclusions>
				<!-- Use the classes found in jcl-over-slf4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>3.2.18.RELEASE</version>
			<scope>compile</scope>
			<exclusions>
				<!-- Use the classes found in jcl-over-slf4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.taglibs</groupId>
			<artifactId>taglibs-standard-impl</artifactId>
			<version>1.2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>struts</groupId>
			<artifactId>struts</artifactId>
			<version>1.2.8</version>
			<scope>compile</scope>
			<exclusions>
				<!-- Use a different commons-beanutils dependency -->
				<exclusion>
					<groupId>commons-beanutils</groupId>
					<artifactId>commons-beanutils</artifactId>
				</exclusion>
				<!-- Use the classes found in jcl-over-slf4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Replaces the version pulled in with struts (1.7.0), which also includes some commons-collections classes -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.3</version>
			<exclusions>
				<!-- Use the classes found in jcl-over-slf4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Migration of Tiles 1 to Tiles 2 -->
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
			<version>2.2.2</version>
		</dependency>
		<dependency>
			<!-- Note that this includes org.apache.taglibs.standard, which is also in
				 org.apache.taglibs:taglibs-standard-impl. Jetty will complain about the duplication of classes, but
				 the Jetty implementation provides taglibs-standard-impl as part of its deployment, so there's no way
				 to easily resolve the duplication. -->
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.26</version>
		</dependency>
		<!-- Force the use of this version, override version brought in by tiles-core -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.7.26</version>
		</dependency>
		<dependency>
			<!-- Required by hibernate but was not included as a transitive dependency in the hibernate pom. -->
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
	</dependencies>

</project>

