plugins {
    id 'java-library'
    id 'io.spring.dependency-management' version "1.0.8.RELEASE"
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

// this needs to be set after the 'java' plugin has been applied
sourceCompatibility = 1.8
targetCompatibility = 1.8

setVersion(project.ext.versionNumber)

dependencies {
    implementation 'org.webcurator:webcurator-core:3.0.0-SNAPSHOT'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

    // TODO The version really should come in through the io.spring-dependency-management plugin. Not sure why it doesn't.
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.1.7.RELEASE'
    testImplementation 'junit:junit:4.12'
}

jar {
    includeEmptyDirs = false
}

task jarSources(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    includeEmptyDirs = false

    from sourceSets.main.allSource
}

artifacts {
    publishableArtifacts jar, jarSources
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact tasks.jarSources
        }
    }

    repositories {
        maven {
            mavenLocal()
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

build.dependsOn jar, jarSources
